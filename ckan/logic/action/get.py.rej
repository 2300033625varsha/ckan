diff a/ckan/logic/action/get.py b/ckan/logic/action/get.py	(rejected hunks)
@@ -53,23 +53,6 @@ _case = sqlalchemy.case
 _text = sqlalchemy.text
 
 
-def _filter_activity_by_user(activity_list, users=[]):
-    '''
-    Return the given ``activity_list`` with activities from the specified
-    users removed. The users parameters should be a list of ids.
-
-    A *new* filtered list is returned, the given ``activity_list`` itself is
-    not modified.
-    '''
-    if not len(users):
-        return activity_list
-    new_list = []
-    for activity in activity_list:
-        if activity.user_id not in users:
-            new_list.append(activity)
-    return new_list
-
-
 def _activity_stream_get_filtered_users():
     '''
     Get the list of users from the :ref:`ckan.hide_activity_from_users` config
@@ -2510,10 +2493,8 @@ def user_activity_list(context, data_dict):
     limit = int(
         data_dict.get('limit', config.get('ckan.activity_list_limit', 31)))
 
-    _activity_objects = model.activity.user_activity_list(user.id, limit=limit,
-            offset=offset)
-    activity_objects = _filter_activity_by_user(_activity_objects,
-            _activity_stream_get_filtered_users())
+    activity_objects = model.activity.user_activity_list(
+        user.id, limit=limit, offset=offset)
 
     return model_dictize.activity_list_dictize(activity_objects, context)
 
@@ -2552,10 +2533,8 @@ def package_activity_list(context, data_dict):
     limit = int(
         data_dict.get('limit', config.get('ckan.activity_list_limit', 31)))
 
-    _activity_objects = model.activity.package_activity_list(package.id,
-            limit=limit, offset=offset)
-    activity_objects = _filter_activity_by_user(_activity_objects,
-            _activity_stream_get_filtered_users())
+    activity_objects = model.activity.package_activity_list(
+        package.id, limit=limit, offset=offset)
 
     return model_dictize.activity_list_dictize(activity_objects, context)
 
@@ -2593,10 +2572,8 @@ def group_activity_list(context, data_dict):
     group_show = logic.get_action('group_show')
     group_id = group_show(context, {'id': group_id})['id']
 
-    _activity_objects = model.activity.group_activity_list(group_id,
-            limit=limit, offset=offset)
-    activity_objects = _filter_activity_by_user(_activity_objects,
-            _activity_stream_get_filtered_users())
+    activity_objects = model.activity.group_activity_list(
+        group_id, limit=limit, offset=offset)
 
     return model_dictize.activity_list_dictize(activity_objects, context)
 
@@ -2625,10 +2602,8 @@ def organization_activity_list(context, data_dict):
     org_show = logic.get_action('organization_show')
     org_id = org_show(context, {'id': org_id})['id']
 
-    _activity_objects = model.activity.group_activity_list(org_id,
-            limit=limit, offset=offset)
-    activity_objects = _filter_activity_by_user(_activity_objects,
-            _activity_stream_get_filtered_users())
+    activity_objects = model.activity.group_activity_list(
+        org_id, limit=limit, offset=offset)
 
     return model_dictize.activity_list_dictize(activity_objects, context)
 
@@ -2655,10 +2630,8 @@ def recently_changed_packages_activity_list(context, data_dict):
     limit = int(
         data_dict.get('limit', config.get('ckan.activity_list_limit', 31)))
 
-    _activity_objects = model.activity.recently_changed_packages_activity_list(
-            limit=limit, offset=offset)
-    activity_objects = _filter_activity_by_user(_activity_objects,
-            _activity_stream_get_filtered_users())
+    activity_objects = model.activity.recently_changed_packages_activity_list(
+        limit=limit, offset=offset)
 
     return model_dictize.activity_list_dictize(activity_objects, context)
 
@@ -3334,11 +3307,9 @@ def dashboard_activity_list(context, data_dict):
 
     # FIXME: Filter out activities whose subject or object the user is not
     # authorized to read.
-    _activity_objects = model.activity.dashboard_activity_list(user_id,
-            limit=limit, offset=offset)
+    activity_objects = model.activity.dashboard_activity_list(
+        user_id, limit=limit, offset=offset)
 
-    activity_objects = _filter_activity_by_user(_activity_objects,
-            _activity_stream_get_filtered_users())
     activity_dicts = model_dictize.activity_list_dictize(
         activity_objects, context)
 
